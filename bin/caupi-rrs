#!/usr/bin/env python
import os
import argparse
import numpy as np
import matplotlib.pyplot as plt

from caupi.conf.restart import extract_path

if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  parser.add_argument('frs', type=str, help='restart file')
  parser.add_argument('--ndim', type=int, default=None)
  parser.add_argument('--nparts', type=int, default=None)
  parser.add_argument('--nslices', type=int, default=None)
  parser.add_argument('--fout', type=str, default=None,
    help='path output file')
  parser.add_argument('--force', action='store_true', help='keep on trucking')
  args = parser.parse_args()

  frs = args.frs
  if not frs.endswith('.rs'):
    msg = '%s does not end in .rs; use --force to continue' % frs
    raise RuntimeError(msg)

  fout = args.fout
  if fout is None:
    fout = args.frs.replace('.rs', '.rs.path')
  if os.path.isfile(fout):
    raise RuntimeError('%s exists' % fout)

  ndim = args.ndim
  nparts = args.nparts
  nslices = args.nslices
  if (ndim is None) or (nparts is None) or (nslices is None):
    # read from input file
    from caupi.readers.ascii import read_sy
    fsy = frs.replace('.rs', '.sy')  # find input
    if not os.path.isfile(fsy):
      raise RuntimeError('input %s not found' % fsy)
    meta = read_sy(fsy)
    ndim = len(meta['box'])
    nparts = meta['nparts']
    nslices = meta['nslice']

  path = extract_path(frs, ndim, nparts, nslices)
  np.savetxt(fout, path.reshape(ndim*nparts, nslices))
# end __main__
